{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global console, document, Excel, Office, OfficeExtension */\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Outlook) {\r\n    // Make functions globally accessible\r\n    (window as any).createOrderAcknowledgementDraft = createOrderAcknowledgementDraft;\r\n    (window as any).sendAcknowledgementEmail = sendAcknowledgementEmail;\r\n    \r\n    // Initialize the app when Outlook is ready\r\n    initializeApp();\r\n  }\r\n});\r\n\r\n// Functions will be made globally available at the end of the file\r\n\r\nlet currentEmailData: any = null;\r\nlet processedData: any = null;\r\nlet currentValidation: any = null;\r\nlet currentFileId: number = 0;\r\n\r\n// Background processing variables\r\nlet autoProcessingEnabled = true;\r\nlet processedEmails = new Set<string>();\r\n\r\n// Load sample data for debugging\r\nfunction loadSampleData() {\r\n  console.log('loadSampleData function called!');\r\n  (window as any).loadSampleData = loadSampleData;\r\n  \r\n  // Create sample data based on the nexair example\r\n  const sampleData = {\r\n    company_info: {\r\n      account_number: '781',\r\n      customer_po_number: '11082962',\r\n      po_date: '2025-10-01T13:21:21.395581Z',\r\n      company_name: 'NAK CONSTRUCTION SERVICES LLC',\r\n      billing_company_name: 'NAK CONSTRUCTION SERVICES LLC',\r\n      shipping_address: '140 SOUTH HOLLAND DRIVE, PENDERGRASS, GA 30567',\r\n      shipping_method: 'GROUND',\r\n      shipping_account_number: 'prepaid & add'\r\n    },\r\n    line_items: [\r\n      {\r\n        internal_part_number: 'ZTIP107D73',\r\n        description: 'CUTTING TIP KOIKE #3',\r\n        quantity: '5',\r\n        unit_price: '19.80',\r\n        external_part_number: 'ZTIP107D73',\r\n        mapping_status: 'mapped',\r\n        mapping_confidence: 95\r\n      },\r\n      {\r\n        internal_part_number: 'ZTIP107D74',\r\n        description: 'TIP, CUTTING 107D7 #4 NAT GAS',\r\n        quantity: '5',\r\n        unit_price: '19.80',\r\n        external_part_number: 'ZTIP107D74',\r\n        mapping_status: 'mapped',\r\n        mapping_confidence: 95\r\n      },\r\n      {\r\n        internal_part_number: 'ZTIP107D75',\r\n        description: 'TIP 107D7 #5 HIGH SPEED NATURAL GAS CUTTING TIP',\r\n        quantity: '10',\r\n        unit_price: '18.00',\r\n        external_part_number: 'ZTIP107D75',\r\n        mapping_status: 'mapped',\r\n        mapping_confidence: 95\r\n      }\r\n    ]\r\n  };\r\n  \r\n  // Store the sample data\r\n  processedData = sampleData;\r\n  currentFileId = 0;\r\n  \r\n  // Show the form interface\r\n  displayResults(sampleData, null, null).catch(console.error);\r\n}\r\n\r\n// Fallback function for when Flask server is not available\r\nfunction showFallbackForm() {\r\n  console.log('showFallbackForm function called!');\r\n  (window as any).showFallbackForm = showFallbackForm;\r\n  \r\n  // Get email info for manual entry\r\n  const subject = Office.context.mailbox.item.subject;\r\n  const from = Office.context.mailbox.item.from?.displayName || Office.context.mailbox.item.from?.emailAddress || 'Unknown';\r\n  \r\n  // Create a blank form with email context\r\n  const fallbackData = {\r\n    company_info: {\r\n      account_number: '',\r\n      customer_po_number: '',\r\n      po_date: new Date().toISOString(),\r\n      company_name: '',\r\n      shipping_address: '',\r\n      shipping_method: 'GROUND',\r\n      shipping_account_number: 'prepaid & add'\r\n    },\r\n    line_items: [\r\n      {\r\n        internal_part_number: '',\r\n        description: '',\r\n        quantity: '',\r\n        unit_price: '',\r\n        external_part_number: '',\r\n        mapping_status: 'manual',\r\n        mapping_confidence: 0\r\n      }\r\n    ],\r\n    email_context: {\r\n      subject: subject,\r\n      from: from\r\n    }\r\n  };\r\n  \r\n  // Store the fallback data\r\n  processedData = fallbackData;\r\n  currentFileId = 0;\r\n  \r\n  // Show the form interface\r\n  displayResults(fallbackData, null, null).catch(console.error);\r\n}\r\n\r\nasync function initializeApp() {\r\n  try {\r\n    // Initialize background processing\r\n    initializeBackgroundProcessing();\r\n    \r\n    // Add event listener for email selection changes\r\n    Office.context.mailbox.addHandlerAsync(\r\n      Office.EventType.ItemChanged,\r\n      onItemChanged\r\n    );\r\n    \r\n    // Get current email data\r\n    await loadEmailData();\r\n    \r\n    // Check if this email has been processed and has tags - if so, show review UI\r\n    const hasProcessedTag = await checkForProcessedEmail();\r\n    \r\n    if (!hasProcessedTag) {\r\n      // Only check for attachments if email hasn't been processed yet\r\n      await checkForPurchaseOrderAttachments();\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error initializing app:\", error);\r\n    showError(\"Failed to initialize the application: \" + error.message);\r\n  }\r\n}\r\n\r\n// Event handler for when user switches to a different email\r\nasync function onItemChanged() {\r\n  try {\r\n    await loadEmailData();\r\n    const hasProcessedTag = await checkForProcessedEmail();\r\n    \r\n    if (!hasProcessedTag) {\r\n      await checkForPurchaseOrderAttachments();\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error handling item change:\", error);\r\n  }\r\n}\r\n\r\n// Check if email has \"Pending Approval\" or \"Missing Info\" tags and load review UI\r\nasync function checkForProcessedEmail(): Promise<boolean> {\r\n  return new Promise((resolve) => {\r\n    Office.context.mailbox.item.categories.getAsync((result) => {\r\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\r\n        const categories = result.value;\r\n        \r\n        // Check for our processing tags\r\n        const hasPendingApproval = categories.some(cat => cat.displayName === \"Pending Approval\");\r\n        const hasMissingInfo = categories.some(cat => cat.displayName === \"Missing Info\");\r\n        const hasApproved = categories.some(cat => cat.displayName === \"Approved\");\r\n        \r\n        if (hasPendingApproval || hasMissingInfo || hasApproved) {\r\n          console.log(\"Email has processing tag, loading review UI...\");\r\n          loadReviewUI(categories);\r\n          resolve(true);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      } else {\r\n        resolve(false);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// Load the review UI for a processed email\r\nasync function loadReviewUI(categories: any[]) {\r\n  (window as any).loadReviewUI = loadReviewUI;\r\n  try {\r\n    // Check if this email is approved (read-only mode)\r\n    const hasApproved = categories.some(cat => cat.displayName === \"Approved\");\r\n    \r\n    // Get the email's unique ID and attachment info\r\n    const emailId = Office.context.mailbox.item.conversationId;\r\n    const subject = Office.context.mailbox.item.subject;\r\n    const attachments = Office.context.mailbox.item.attachments;\r\n    \r\n    // Get PDF attachment name if exists\r\n    let attachmentName = '';\r\n    if (attachments && attachments.length > 0) {\r\n      const pdfAttachment = attachments.find(att => att.name.toLowerCase().endsWith('.pdf'));\r\n      if (pdfAttachment) {\r\n        attachmentName = pdfAttachment.name;\r\n      }\r\n    }\r\n    \r\n    // If approved, show read-only form immediately\r\n    if (hasApproved) {\r\n      console.log(\"Email is approved, showing read-only form...\");\r\n      await loadApprovedEmailData(categories);\r\n      return;\r\n    }\r\n    \r\n    // Show loading state\r\n    const uploadSection = document.querySelector('.card-body');\r\n    if (uploadSection) {\r\n      uploadSection.innerHTML = `\r\n        <div class=\"text-center\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n          <p class=\"mt-3\">Processing email: \"${subject}\"</p>\r\n          <p class=\"text-muted small\">Attachment: ${attachmentName || 'None'}</p>\r\n          <div class=\"mt-3\">\r\n            <button class=\"btn btn-sm btn-outline-secondary me-2\" id=\"loadSampleDataBtn\">\r\n              <i class=\"fas fa-flask\"></i> Load Sample Data (Debug)\r\n      </button>\r\n            <button class=\"btn btn-sm btn-outline-primary\" id=\"skipLoadingBtn\">\r\n              <i class=\"fas fa-forward\"></i> Skip to Manual Entry\r\n      </button>\r\n    </div>\r\n    </div>\r\n  `;\r\n  \r\n      // Add event listeners for debug buttons\r\n      setTimeout(() => {\r\n        const loadSampleBtn = document.getElementById('loadSampleDataBtn');\r\n        const skipBtn = document.getElementById('skipLoadingBtn');\r\n        \r\n        if (loadSampleBtn) {\r\n          loadSampleBtn.addEventListener('click', loadSampleData);\r\n        }\r\n        \r\n        if (skipBtn) {\r\n          skipBtn.addEventListener('click', showFallbackForm);\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    // Try to get processed data from Flask server\r\n    try {\r\n      const response = await fetch(`https://bx3w2xz6f6.us-east-1.awsapprunner.com/api/get_processed_email?email_id=${encodeURIComponent(emailId)}&subject=${encodeURIComponent(subject)}&attachment_name=${encodeURIComponent(attachmentName)}`, {\r\n        method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data) {\r\n        // Store the file ID for later use\r\n        currentFileId = result.file_id || 0;\r\n        // Display the actual processed data from this email\r\n        await displayResults(result.data, result.reviewReport, result.validation);\r\n    } else {\r\n        throw new Error(result.message || 'No processed data found');\r\n      }\r\n    } catch (fetchError) {\r\n      console.error('Error fetching from Flask server:', fetchError);\r\n      \r\n      // Show fallback message when Flask server is not available\r\n      const uploadSection = document.querySelector('.card-body');\r\n      if (uploadSection) {\r\n        uploadSection.innerHTML = `\r\n          <div class=\"alert alert-warning\">\r\n            <h5><i class=\"fas fa-exclamation-triangle\"></i> Flask Server Connection Error</h5>\r\n            <p><strong>Error:</strong> ${fetchError.message}</p>\r\n            <p>Could not connect to the processing server. This might be because:</p>\r\n            <ul>\r\n              <li>Flask server is not running on port 5000</li>\r\n              <li>Email hasn't been processed yet</li>\r\n              <li>Network connectivity issues</li>\r\n            </ul>\r\n            <div class=\"mt-3\">\r\n              <button class=\"btn btn-primary me-2\" onclick=\"location.reload()\">\r\n                <i class=\"fas fa-sync\"></i> Retry\r\n              </button>\r\n              <button class=\"btn btn-outline-secondary\" onclick=\"showFallbackForm()\">\r\n                <i class=\"fas fa-edit\"></i> Manual Entry\r\n              </button>\r\n      </div>\r\n    </div>\r\n  `;\r\n      }\r\n      }\r\n    } catch (error) {\r\n    console.error(\"Error loading review UI:\", error);\r\n    showError(\"Failed to load email data: \" + error.message);\r\n  }\r\n}\r\n\r\n// Load approved email data in read-only mode\r\nasync function loadApprovedEmailData(categories: any[]) {\r\n  try {\r\n    // Get the email's unique ID and attachment info\r\n    const emailId = Office.context.mailbox.item.conversationId;\r\n    const subject = Office.context.mailbox.item.subject;\r\n      const attachments = Office.context.mailbox.item.attachments;\r\n\r\n    // Get PDF attachment name if exists\r\n      let attachmentName = '';\r\n      if (attachments && attachments.length > 0) {\r\n        const pdfAttachment = attachments.find(att => att.name.toLowerCase().endsWith('.pdf'));\r\n        if (pdfAttachment) {\r\n          attachmentName = pdfAttachment.name;\r\n        }\r\n      }\r\n      \r\n    // Try to get processed data from Flask server\r\n    try {\r\n      const response = await fetch(`https://bx3w2xz6f6.us-east-1.awsapprunner.com/api/get_processed_email?email_id=${encodeURIComponent(emailId)}&subject=${encodeURIComponent(subject)}&attachment_name=${encodeURIComponent(attachmentName)}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data) {\r\n        // Store the file ID for later use\r\n        currentFileId = result.file_id || 0;\r\n        // Display the approved data in read-only mode\r\n        await displayApprovedResults(result.data, result.reviewReport, result.validation);\r\n      } else {\r\n        throw new Error(result.message || 'No processed data found');\r\n      }\r\n    } catch (fetchError) {\r\n      console.error('Error fetching approved email data:', fetchError);\r\n      showError('Could not load approved order data: ' + fetchError.message);\r\n      }\r\n    } catch (error) {\r\n    console.error(\"Error loading approved email data:\", error);\r\n    showError(\"Failed to load approved email data: \" + error.message);\r\n  }\r\n}\r\n\r\n// Display approved results in read-only mode\r\nasync function displayApprovedResults(data: any, reviewReport: any, validation: any) {\r\n  // Store the processed data\r\n  processedData = data;\r\n  currentValidation = validation;\r\n  \r\n  // Convert Epicor format to form format if needed\r\n  const formData = await convertToFormFormat(data);\r\n  \r\n  // Get current timestamp for display\r\n  const enteredTimestamp = new Date().toLocaleString();\r\n  \r\n  // Show the read-only Epicor order form\r\n  const uploadSection = document.querySelector('.card-body');\r\n  if (uploadSection) {\r\n    uploadSection.innerHTML = `\r\n      <div id=\"formView\">\r\n        <div class=\"card\" id=\"epicorFormCard\">\r\n          <div class=\"card-header bg-success text-white\">\r\n            <h5 class=\"mb-0\"><i class=\"fas fa-check-circle\"></i> Entered ${enteredTimestamp}</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Order Header Section -->\r\n            <div class=\"mb-4\">\r\n              <h6 class=\"border-bottom pb-2\"><i class=\"fas fa-heading\"></i> Order Header</h6>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Customer Number *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"custNum\" value=\"${formData.custNum}\" readonly>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Customer Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"customerName\" value=\"${formData.customerName || ''}\" readonly>\r\n                    <small class=\"form-text text-muted\">Extracted from account number</small>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">PO Number *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"poNum\" value=\"${formData.poNum}\" readonly>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Order Date</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"orderDate\" value=\"${formData.orderDate}\" readonly>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Ship Via Code</label>\r\n                    <select class=\"form-select\" id=\"shipViaCode\" disabled>\r\n                      <option value=\"INVO\" ${formData.shipViaCode === 'INVO' ? 'selected' : ''}>INVO</option>\r\n                      <option value=\"UPS\" ${formData.shipViaCode === 'UPS' ? 'selected' : ''}>UPS</option>\r\n                      <option value=\"FEDEX\" ${formData.shipViaCode === 'FEDEX' ? 'selected' : ''}>FEDEX</option>\r\n                      <option value=\"TRUCK\" ${formData.shipViaCode === 'TRUCK' ? 'selected' : ''}>TRUCK</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Payment Flag</label>\r\n                    <select class=\"form-select\" id=\"payFlag\" disabled>\r\n                      <option value=\"SHIP\" ${formData.payFlag === 'SHIP' ? 'selected' : ''}>SHIP</option>\r\n                      <option value=\"PREPAID\" ${formData.payFlag === 'PREPAID' ? 'selected' : ''}>PREPAID</option>\r\n                      <option value=\"COD\" ${formData.payFlag === 'COD' ? 'selected' : ''}>COD</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Shipping Method</label>\r\n                    <select class=\"form-select\" id=\"shippingMethod\" disabled>\r\n                      <option value=\"GROUND\" ${formData.shippingMethod === 'GROUND' ? 'selected' : ''}>Ground</option>\r\n                      <option value=\"2ND_DAY_AIR\" ${formData.shippingMethod === '2ND_DAY_AIR' ? 'selected' : ''}>2nd Day Air</option>\r\n                      <option value=\"NEXT_DAY_AIR\" ${formData.shippingMethod === 'NEXT_DAY_AIR' ? 'selected' : ''}>Next Day Air</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Shipping Account Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"shippingAccountNumber\" value=\"${formData.shippingAccountNumber}\" readonly>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- One-Time Ship Address Section -->\r\n            <div class=\"mb-4\">\r\n              <h6 class=\"border-bottom pb-2\"><i class=\"fas fa-map-marker-alt\"></i> One-Time Ship Address</h6>\r\n              <div class=\"form-check mb-3\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"useOTS\" ${formData.useOTS ? 'checked' : ''} disabled>\r\n                <label class=\"form-check-label\" for=\"useOTS\">Use One-Time Ship Address</label>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Company Name *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsName\" value=\"${formData.otsName}\" readonly>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Address Line 1 *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsAddress1\" value=\"${formData.otsAddress1}\" readonly>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">City *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsCity\" value=\"${formData.otsCity}\" readonly>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">State *</label>\r\n                    <select class=\"form-select\" id=\"otsState\" disabled>\r\n                      <option value=\"\">Select State</option>\r\n                      <option value=\"AL\">AL</option><option value=\"AK\">AK</option><option value=\"AZ\">AZ</option>\r\n                      <option value=\"AR\">AR</option><option value=\"CA\">CA</option><option value=\"CO\">CO</option>\r\n                      <option value=\"CT\">CT</option><option value=\"DE\">DE</option><option value=\"FL\">FL</option>\r\n                      <option value=\"GA\">GA</option><option value=\"HI\">HI</option><option value=\"ID\">ID</option>\r\n                      <option value=\"IL\">IL</option><option value=\"IN\">IN</option><option value=\"IA\">IA</option>\r\n                      <option value=\"KS\">KS</option><option value=\"KY\">KY</option><option value=\"LA\">LA</option>\r\n                      <option value=\"ME\">ME</option><option value=\"MD\">MD</option><option value=\"MA\">MA</option>\r\n                      <option value=\"MI\">MI</option><option value=\"MN\">MN</option><option value=\"MS\">MS</option>\r\n                      <option value=\"MO\">MO</option><option value=\"MT\">MT</option><option value=\"NE\">NE</option>\r\n                      <option value=\"NV\">NV</option><option value=\"NH\">NH</option><option value=\"NJ\">NJ</option>\r\n                      <option value=\"NM\">NM</option><option value=\"NY\">NY</option><option value=\"NC\">NC</option>\r\n                      <option value=\"ND\">ND</option><option value=\"OH\">OH</option><option value=\"OK\">OK</option>\r\n                      <option value=\"OR\">OR</option><option value=\"PA\">PA</option><option value=\"RI\">RI</option>\r\n                      <option value=\"SC\">SC</option><option value=\"SD\">SD</option><option value=\"TN\">TN</option>\r\n                      <option value=\"TX\">TX</option><option value=\"UT\">UT</option><option value=\"VT\">VT</option>\r\n                      <option value=\"VA\">VA</option><option value=\"WA\">WA</option><option value=\"WV\">WV</option>\r\n                      <option value=\"WI\">WI</option><option value=\"WY\">WY</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">ZIP Code *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsZip\" value=\"${formData.otsZip}\" readonly>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Line Items Section -->\r\n            <div class=\"mb-4\">\r\n              <h6 class=\"border-bottom pb-2\"><i class=\"fas fa-list\"></i> Line Items</h6>\r\n              <div id=\"lineItemsContainer\">\r\n                ${generateReadOnlyLineItemsHtml(formData.lineItems)}\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Read-only notice -->\r\n            <div class=\"alert alert-info\">\r\n              <i class=\"fas fa-info-circle\"></i> This order has been entered and cannot be modified.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    \r\n    // Set the state dropdown value\r\n    const stateField = document.getElementById('otsState') as HTMLSelectElement;\r\n    if (stateField) {\r\n      stateField.value = formData.otsState;\r\n    }\r\n  }\r\n}\r\n\r\n// Generate read-only line items HTML\r\nfunction generateReadOnlyLineItemsHtml(lineItems: any[]): string {\r\n  if (!lineItems || lineItems.length === 0) {\r\n    return '<p class=\"text-muted small\">No line items found</p>';\r\n  }\r\n  \r\n  return lineItems.map((item, index) => `\r\n    <div class=\"line-item-card\" data-index=\"${index}\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Part Number *</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"partNum_${index}\" value=\"${item.internal_part_number || ''}\" readonly>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Qty *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"sellingQuantity_${index}\" value=\"${item.quantity || ''}\" readonly>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Price *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"docUnitPrice_${index}\" value=\"${item.unit_price || ''}\" readonly>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Total</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineTotal_${index}\" value=\"${((parseFloat(item.quantity) || 0) * (parseFloat(item.unit_price) || 0)).toFixed(2)}\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineDesc_${index}\" value=\"${item.description || ''}\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <small class=\"text-muted\">\r\n            <strong>Ext:</strong> ${item.external_part_number || 'N/A'} | \r\n            <strong>Status:</strong> <span class=\"badge bg-success\">Approved</span> | \r\n            <strong>Conf:</strong> ${(item.mapping_confidence || 0).toFixed(1)}%\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `).join('');\r\n}\r\n\r\n// Error handling function\r\nfunction showError(message: string) {\r\n  (window as any).showError = showError;\r\n  const uploadSection = document.querySelector('.card-body');\r\n  if (uploadSection) {\r\n    uploadSection.innerHTML = `\r\n      <div class=\"alert alert-danger\">\r\n        <h5><i class=\"fas fa-exclamation-triangle\"></i> Error</h5>\r\n        <p>${message}</p>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// Missing functions that are referenced in the code\r\nasync function displayResults(data: any, reviewReport: any, validation: any) {\r\n  // Store the processed data for form binding\r\n  processedData = data;\r\n  currentValidation = validation;\r\n  \r\n  // Convert Epicor format to form format if needed\r\n  const formData = await convertToFormFormat(data);\r\n  \r\n  // Show the actual Epicor order form\r\n  const uploadSection = document.querySelector('.card-body');\r\n  if (uploadSection) {\r\n    uploadSection.innerHTML = `\r\n      <div id=\"formView\">\r\n        <div class=\"card\" id=\"epicorFormCard\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\"><i class=\"fas fa-file-invoice\"></i> Epicor Order Form</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Order Header Section -->\r\n            <div class=\"mb-4\">\r\n              <h6 class=\"border-bottom pb-2\"><i class=\"fas fa-heading\"></i> Order Header</h6>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Customer Number *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"custNum\" value=\"${formData.custNum}\" required>\r\n                    <div class=\"field-error\" id=\"custNum_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Customer Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"customerName\" value=\"${formData.customerName || ''}\" readonly>\r\n                    <small class=\"form-text text-muted\">Extracted from bill-to address</small>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">PO Number *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"poNum\" value=\"${formData.poNum}\" required>\r\n                    <div class=\"field-error\" id=\"poNum_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Order Date</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"orderDate\" value=\"${formData.orderDate}\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Ship Via Code</label>\r\n                    <select class=\"form-select\" id=\"shipViaCode\">\r\n                      <option value=\"INVO\" ${formData.shipViaCode === 'INVO' ? 'selected' : ''}>INVO</option>\r\n                      <option value=\"UPS\" ${formData.shipViaCode === 'UPS' ? 'selected' : ''}>UPS</option>\r\n                      <option value=\"FEDEX\" ${formData.shipViaCode === 'FEDEX' ? 'selected' : ''}>FEDEX</option>\r\n                      <option value=\"TRUCK\" ${formData.shipViaCode === 'TRUCK' ? 'selected' : ''}>TRUCK</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Payment Flag</label>\r\n                    <select class=\"form-select\" id=\"payFlag\">\r\n                      <option value=\"SHIP\" ${formData.payFlag === 'SHIP' ? 'selected' : ''}>SHIP</option>\r\n                      <option value=\"PREPAID\" ${formData.payFlag === 'PREPAID' ? 'selected' : ''}>PREPAID</option>\r\n                      <option value=\"COD\" ${formData.payFlag === 'COD' ? 'selected' : ''}>COD</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Shipping Method</label>\r\n                    <select class=\"form-select\" id=\"shippingMethod\">\r\n                      <option value=\"GROUND\" ${formData.shippingMethod === 'GROUND' ? 'selected' : ''}>Ground</option>\r\n                      <option value=\"2ND_DAY_AIR\" ${formData.shippingMethod === '2ND_DAY_AIR' ? 'selected' : ''}>2nd Day Air</option>\r\n                      <option value=\"NEXT_DAY_AIR\" ${formData.shippingMethod === 'NEXT_DAY_AIR' ? 'selected' : ''}>Next Day Air</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Shipping Account Number</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"shippingAccountNumber\" value=\"${formData.shippingAccountNumber}\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- One-Time Ship Address Section -->\r\n            <div class=\"mb-4\">\r\n              <h6 class=\"border-bottom pb-2\"><i class=\"fas fa-map-marker-alt\"></i> One-Time Ship Address</h6>\r\n              <div class=\"form-check mb-3\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"useOTS\" ${formData.useOTS ? 'checked' : ''}>\r\n                <label class=\"form-check-label\" for=\"useOTS\">Use One-Time Ship Address</label>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Company Name *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsName\" value=\"${formData.otsName}\" required>\r\n                    <div class=\"field-error\" id=\"otsName_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">Address Line 1 *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsAddress1\" value=\"${formData.otsAddress1}\" required>\r\n                    <div class=\"field-error\" id=\"otsAddress1_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">City *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsCity\" value=\"${formData.otsCity}\" required>\r\n                    <div class=\"field-error\" id=\"otsCity_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">State *</label>\r\n                    <select class=\"form-select\" id=\"otsState\" required>\r\n                      <option value=\"\">Select State</option>\r\n                      <option value=\"AL\">AL</option><option value=\"AK\">AK</option><option value=\"AZ\">AZ</option>\r\n                      <option value=\"AR\">AR</option><option value=\"CA\">CA</option><option value=\"CO\">CO</option>\r\n                      <option value=\"CT\">CT</option><option value=\"DE\">DE</option><option value=\"FL\">FL</option>\r\n                      <option value=\"GA\">GA</option><option value=\"HI\">HI</option><option value=\"ID\">ID</option>\r\n                      <option value=\"IL\">IL</option><option value=\"IN\">IN</option><option value=\"IA\">IA</option>\r\n                      <option value=\"KS\">KS</option><option value=\"KY\">KY</option><option value=\"LA\">LA</option>\r\n                      <option value=\"ME\">ME</option><option value=\"MD\">MD</option><option value=\"MA\">MA</option>\r\n                      <option value=\"MI\">MI</option><option value=\"MN\">MN</option><option value=\"MS\">MS</option>\r\n                      <option value=\"MO\">MO</option><option value=\"MT\">MT</option><option value=\"NE\">NE</option>\r\n                      <option value=\"NV\">NV</option><option value=\"NH\">NH</option><option value=\"NJ\">NJ</option>\r\n                      <option value=\"NM\">NM</option><option value=\"NY\">NY</option><option value=\"NC\">NC</option>\r\n                      <option value=\"ND\">ND</option><option value=\"OH\">OH</option><option value=\"OK\">OK</option>\r\n                      <option value=\"OR\">OR</option><option value=\"PA\">PA</option><option value=\"RI\">RI</option>\r\n                      <option value=\"SC\">SC</option><option value=\"SD\">SD</option><option value=\"TN\">TN</option>\r\n                      <option value=\"TX\">TX</option><option value=\"UT\">UT</option><option value=\"VT\">VT</option>\r\n                      <option value=\"VA\">VA</option><option value=\"WA\">WA</option><option value=\"WV\">WV</option>\r\n                      <option value=\"WI\">WI</option><option value=\"WY\">WY</option>\r\n                    </select>\r\n                    <div class=\"field-error\" id=\"otsState_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label class=\"form-label\">ZIP Code *</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"otsZip\" value=\"${formData.otsZip}\" required>\r\n                    <div class=\"field-error\" id=\"otsZip_error\" style=\"display: none;\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Line Items Section -->\r\n            <div class=\"mb-4\">\r\n              <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <h6 class=\"mb-0 border-bottom pb-2\"><i class=\"fas fa-list\"></i> Line Items</h6>\r\n                <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" id=\"addLineItem\">\r\n                  <i class=\"fas fa-plus\"></i> Add Item\r\n        </button>\r\n      </div>\r\n              <div id=\"lineItemsContainer\">\r\n                ${generateLineItemsHtml(formData.lineItems)}\r\n    </div>\r\n            </div>\r\n\r\n            <!-- Action Buttons -->\r\n            <div class=\"d-flex gap-2\">\r\n              <button type=\"button\" class=\"btn btn-primary\" id=\"saveFormBtn\">\r\n                <i class=\"fas fa-save\"></i> Save & Enter Order\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-outline-secondary\" id=\"resetFormBtn\">\r\n                <i class=\"fas fa-undo\"></i> Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n    \r\n    // Initialize form event listeners\r\n    initializeFormEventListeners();\r\n    \r\n    // Set the state dropdown value\r\n    const stateField = document.getElementById('otsState') as HTMLSelectElement;\r\n    if (stateField) {\r\n      stateField.value = formData.otsState;\r\n    }\r\n    \r\n    // Run initial validation to highlight MISSING fields and set button state\r\n    setTimeout(() => {\r\n      validateForm();\r\n    }, 100);\r\n  }\r\n}\r\n\r\n// Save updated data back to Flask server\r\nasync function saveUpdatedDataToServer(updatedData: any) {\r\n  try {\r\n    const emailId = Office.context.mailbox.item.itemId;\r\n    const subject = Office.context.mailbox.item.subject;\r\n    const attachmentName = currentFileId ? `attachment_${currentFileId}` : 'unknown';\r\n    \r\n    const response = await fetch('https://bx3w2xz6f6.us-east-1.awsapprunner.com/api/save_updated_data', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email_id: emailId,\r\n        subject: subject,\r\n        attachment_name: attachmentName,\r\n        updated_data: updatedData\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    const result = await response.json();\r\n    console.log('Data saved to server:', result);\r\n    \r\n  } catch (error) {\r\n    console.error('Error saving updated data to server:', error);\r\n    // Don't show error to user since this is background operation\r\n  }\r\n}\r\n\r\n// Convert form data back to Epicor format\r\nfunction convertFormToEpicor(): any {\r\n  // Get all form field values\r\n  const custNum = (document.getElementById('custNum') as HTMLInputElement)?.value || '';\r\n  const poNum = (document.getElementById('poNum') as HTMLInputElement)?.value || '';\r\n  const orderDate = (document.getElementById('orderDate') as HTMLInputElement)?.value || new Date().toISOString().slice(0, 16);\r\n  const shipViaCode = (document.getElementById('shipViaCode') as HTMLSelectElement)?.value || 'INVO';\r\n  const payFlag = (document.getElementById('payFlag') as HTMLSelectElement)?.value || 'SHIP';\r\n  const shippingMethod = (document.getElementById('shippingMethod') as HTMLSelectElement)?.value || 'GROUND';\r\n  const shippingAccountNumber = (document.getElementById('shippingAccountNumber') as HTMLInputElement)?.value || 'prepaid & add';\r\n  const useOTS = (document.getElementById('useOTS') as HTMLInputElement)?.checked || false;\r\n  const otsName = (document.getElementById('otsName') as HTMLInputElement)?.value || '';\r\n  const otsAddress1 = (document.getElementById('otsAddress1') as HTMLInputElement)?.value || '';\r\n  const otsCity = (document.getElementById('otsCity') as HTMLInputElement)?.value || '';\r\n  const otsState = (document.getElementById('otsState') as HTMLSelectElement)?.value || '';\r\n  const otsZip = (document.getElementById('otsZip') as HTMLInputElement)?.value || '';\r\n  \r\n  // Get line items\r\n  const lineItems = [];\r\n  const lineItemCards = document.querySelectorAll('.line-item-card');\r\n  \r\n  lineItemCards.forEach((card, index) => {\r\n    const partNum = (document.getElementById(`partNum_${index}`) as HTMLInputElement)?.value || '';\r\n    const description = (document.getElementById(`lineDesc_${index}`) as HTMLInputElement)?.value || '';\r\n    const quantity = (document.getElementById(`sellingQuantity_${index}`) as HTMLInputElement)?.value || '';\r\n    const unitPrice = (document.getElementById(`docUnitPrice_${index}`) as HTMLInputElement)?.value || '';\r\n    \r\n    if (partNum || quantity || unitPrice) {\r\n      lineItems.push({\r\n        PartNum: partNum,\r\n        LineDesc: description,\r\n        SellingQuantity: parseFloat(quantity) || 0,\r\n        DocUnitPrice: parseFloat(unitPrice) || 0\r\n      });\r\n    }\r\n  });\r\n  \r\n  // Return in Epicor format\r\n  return {\r\n    ds: {\r\n      OrderHed: [{\r\n        CustNum: custNum,\r\n        PONum: poNum,\r\n        OrderDate: orderDate,\r\n        ShipViaCode: shipViaCode,\r\n        PayFlag: payFlag,\r\n        ShippingMethod: shippingMethod,\r\n        ShippingAccountNumber: shippingAccountNumber,\r\n        UseOTS: useOTS,\r\n        OTSName: otsName,\r\n        OTSAddress1: otsAddress1,\r\n        OTSCity: otsCity,\r\n        OTSState: otsState,\r\n        OTSZip: otsZip\r\n      }],\r\n      OrderDtl: lineItems\r\n    }\r\n  };\r\n}\r\n\r\n// Convert Epicor format to form format\r\n// Look up customer name by account number\r\nasync function lookupCustomerName(accountNumber: string): Promise<string> {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/get_customer_by_account?account_number=${encodeURIComponent(accountNumber)}`);\r\n    const result = await response.json();\r\n    \r\n    if (result.success && result.customer) {\r\n      return result.customer.company_name;\r\n    }\r\n    \r\n    return '';\r\n  } catch (error) {\r\n    console.error('Error looking up customer:', error);\r\n    return '';\r\n  }\r\n}\r\n\r\nasync function convertToFormFormat(data: any): Promise<any> {\r\n  // Check if data is in Epicor format (has ds.OrderHed)\r\n  if (data.ds && data.ds.OrderHed && data.ds.OrderHed.length > 0) {\r\n    const orderHed = data.ds.OrderHed[0];\r\n    const orderDtl = data.ds.OrderDtl || [];\r\n    \r\n    // Look up customer name by account number\r\n    const customerName = await lookupCustomerName(orderHed.CustNum || '');\r\n    \r\n    return {\r\n      custNum: orderHed.CustNum || '',\r\n      poNum: orderHed.PONum || '',\r\n      customerName: customerName,\r\n      orderDate: orderHed.OrderDate ? new Date(orderHed.OrderDate).toISOString().slice(0, 16) : new Date().toISOString().slice(0, 16),\r\n      shipViaCode: orderHed.ShipViaCode || 'INVO',\r\n      payFlag: orderHed.PayFlag || 'SHIP',\r\n      shippingMethod: orderHed.ShippingMethod === '2ND_DAY_AIR' ? '2ND_DAY_AIR' : \r\n                     orderHed.ShippingMethod === 'NEXT_DAY_AIR' ? 'NEXT_DAY_AIR' : 'GROUND',\r\n      shippingAccountNumber: orderHed.ShippingAccountNumber || 'prepaid & add',\r\n      useOTS: orderHed.UseOTS || false,\r\n      otsName: orderHed.OTSName || '',\r\n      otsAddress1: orderHed.OTSAddress1 || '',\r\n      otsCity: orderHed.OTSCity || '',\r\n      otsState: orderHed.OTSState || '',\r\n      otsZip: orderHed.OTSZip || '',\r\n      lineItems: orderDtl.map((item: any) => ({\r\n        internal_part_number: item.PartNum || '',\r\n        description: item.LineDesc || '',\r\n        quantity: item.SellingQuantity || '',\r\n        unit_price: item.DocUnitPrice || '',\r\n        external_part_number: item.PartNum || '',\r\n        mapping_status: 'mapped',\r\n        mapping_confidence: 95\r\n      }))\r\n    };\r\n  }\r\n  \r\n  // If data is already in form format, return as-is\r\n      return {\r\n    custNum: data.company_info?.account_number || '',\r\n    poNum: data.company_info?.customer_po_number || '',\r\n    customerName: await lookupCustomerName(data.company_info?.account_number || ''),\r\n    orderDate: data.company_info?.po_date ? new Date(data.company_info.po_date).toISOString().slice(0, 16) : new Date().toISOString().slice(0, 16),\r\n    shipViaCode: 'INVO',\r\n    payFlag: 'SHIP',\r\n    shippingMethod: data.company_info?.shipping_method || 'GROUND',\r\n    shippingAccountNumber: data.company_info?.shipping_account_number || 'prepaid & add',\r\n    useOTS: true,\r\n    otsName: data.company_info?.company_name || '',\r\n    otsAddress1: data.company_info?.shipping_address || '',\r\n    otsCity: '',\r\n    otsState: '',\r\n    otsZip: '',\r\n    lineItems: data.line_items || []\r\n  };\r\n}\r\n\r\nfunction generateLineItemsHtml(lineItems: any[]): string {\r\n  if (!lineItems || lineItems.length === 0) {\r\n    return '<p class=\"text-muted small\">No line items found</p>';\r\n  }\r\n  \r\n  return lineItems.map((item, index) => `\r\n    <div class=\"line-item-card\" data-index=\"${index}\">\r\n      <div class=\"position-absolute top-0 end-0\">\r\n        <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"removeLineItem(${index})\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Part Number *</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"partNum_${index}\" value=\"${item.internal_part_number || ''}\" placeholder=\"Part #\" required>\r\n            <div class=\"field-error\" id=\"partNum_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Qty *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"sellingQuantity_${index}\" value=\"${item.quantity || ''}\" placeholder=\"Qty\" required>\r\n            <div class=\"field-error\" id=\"sellingQuantity_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Price *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"docUnitPrice_${index}\" value=\"${item.unit_price || ''}\" step=\"0.01\" placeholder=\"Price\" required>\r\n            <div class=\"field-error\" id=\"docUnitPrice_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Total</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineTotal_${index}\" value=\"${((parseFloat(item.quantity) || 0) * (parseFloat(item.unit_price) || 0)).toFixed(2)}\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineDesc_${index}\" value=\"${item.description || ''}\" placeholder=\"Description\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <small class=\"text-muted\">\r\n            <strong>Ext:</strong> ${item.external_part_number || 'N/A'} | \r\n            <strong>Status:</strong> <span class=\"badge bg-${item.mapping_status === 'mapped' ? 'success' : 'warning'}\">${item.mapping_status || 'Unknown'}</span> | \r\n            <strong>Conf:</strong> ${(item.mapping_confidence || 0).toFixed(1)}%\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `).join('');\r\n}\r\n\r\nfunction parseShippingAddress(address: string) {\r\n  if (!address) return;\r\n  \r\n  // Parse \"140 SOUTH HOLLAND DRIVE, PENDERGRASS, GA 30567\"\r\n  const parts = address.split(',');\r\n  if (parts.length >= 2) {\r\n    const cityStateZip = parts[1].trim();\r\n    const cityStateZipParts = cityStateZip.split(' ');\r\n    \r\n    // Set city\r\n    const cityField = document.getElementById('otsCity') as HTMLInputElement;\r\n    if (cityField && cityStateZipParts.length > 0) {\r\n      cityField.value = cityStateZipParts[0];\r\n    }\r\n    \r\n    // Set state\r\n    const stateField = document.getElementById('otsState') as HTMLSelectElement;\r\n    if (stateField && cityStateZipParts.length > 1) {\r\n      stateField.value = cityStateZipParts[1];\r\n    }\r\n    \r\n    // Set ZIP\r\n    const zipField = document.getElementById('otsZip') as HTMLInputElement;\r\n    if (zipField && cityStateZipParts.length > 2) {\r\n      zipField.value = cityStateZipParts[2];\r\n    }\r\n  }\r\n}\r\n\r\nfunction initializeBackgroundProcessing(): void {\r\n  console.log(\"Arzana: Background processing initialized\");\r\n}\r\n\r\nasync function loadEmailData() {\r\n  // Mock implementation\r\n  return Promise.resolve();\r\n}\r\n\r\nasync function checkForPurchaseOrderAttachments() {\r\n  // Mock implementation\r\n  return Promise.resolve();\r\n}\r\n\r\n// Form event listeners and handlers\r\nfunction initializeFormEventListeners() {\r\n  // Add line item button\r\n  const addLineItemBtn = document.getElementById('addLineItem');\r\n  addLineItemBtn?.addEventListener('click', addLineItemHandler);\r\n  \r\n  // Save form button\r\n  const saveFormBtn = document.getElementById('saveFormBtn');\r\n  saveFormBtn?.addEventListener('click', saveFormHandler);\r\n  \r\n  // Reset form button\r\n  const resetFormBtn = document.getElementById('resetFormBtn');\r\n  resetFormBtn?.addEventListener('click', resetFormHandler);\r\n  \r\n  // Real-time validation on input change\r\n  const formFields = document.querySelectorAll('#formView input, #formView select');\r\n  formFields.forEach(field => {\r\n    field.addEventListener('blur', validateField);\r\n    field.addEventListener('input', (event) => {\r\n      clearFieldError(event);\r\n      validateForm(); // Update button state in real-time\r\n    });\r\n  });\r\n}\r\n\r\nfunction addLineItemHandler() {\r\n  const container = document.getElementById('lineItemsContainer');\r\n  if (!container) return;\r\n  \r\n  const newIndex = container.children.length;\r\n  const newItem = {\r\n    internal_part_number: '',\r\n    description: '',\r\n    quantity: '',\r\n    unit_price: '',\r\n    external_part_number: '',\r\n    mapping_status: 'manual',\r\n    mapping_confidence: 0\r\n  };\r\n  \r\n  const lineItemHtml = createLineItemHtml(newItem, newIndex);\r\n  container.insertAdjacentHTML('beforeend', lineItemHtml);\r\n  \r\n  // Attach event listeners to new item\r\n  const newCard = container.lastElementChild;\r\n  if (newCard) {\r\n    const inputs = newCard.querySelectorAll('input');\r\n    inputs.forEach(input => {\r\n      input.addEventListener('blur', () => validateLineItem(newIndex));\r\n      input.addEventListener('input', () => clearLineItemError(newIndex));\r\n    });\r\n  }\r\n}\r\n\r\nfunction createLineItemHtml(item: any, index: number): string {\r\n  return `\r\n    <div class=\"line-item-card\" data-index=\"${index}\">\r\n      <div class=\"position-absolute top-0 end-0\">\r\n        <button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"removeLineItem(${index})\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Part Number *</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"partNum_${index}\" value=\"${item.internal_part_number || ''}\" placeholder=\"Part #\" required>\r\n            <div class=\"field-error\" id=\"partNum_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Qty *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"sellingQuantity_${index}\" value=\"${item.quantity || ''}\" placeholder=\"Qty\" required>\r\n            <div class=\"field-error\" id=\"sellingQuantity_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Price *</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"docUnitPrice_${index}\" value=\"${item.unit_price || ''}\" step=\"0.01\" placeholder=\"Price\" required>\r\n            <div class=\"field-error\" id=\"docUnitPrice_error_${index}\" style=\"display: none;\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Total</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineTotal_${index}\" value=\"${((parseFloat(item.quantity) || 0) * (parseFloat(item.unit_price) || 0)).toFixed(2)}\" readonly>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"mb-2\">\r\n            <label class=\"form-label\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"lineDesc_${index}\" value=\"${item.description || ''}\" placeholder=\"Description\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <small class=\"text-muted\">\r\n            <strong>Ext:</strong> ${item.external_part_number || 'N/A'} | \r\n            <strong>Status:</strong> <span class=\"badge bg-${item.mapping_status === 'mapped' ? 'success' : 'warning'}\">${item.mapping_status || 'Unknown'}</span> | \r\n            <strong>Conf:</strong> ${(item.mapping_confidence || 0).toFixed(1)}%\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction saveFormHandler() {\r\n  // First validate the form\r\n  if (!validateForm()) {\r\n    showError('Please complete all required fields and remove any \"MISSING\" values before saving.');\r\n    return;\r\n  }\r\n  \r\n  // Get form data and convert to Epicor format\r\n  const formData = convertFormToEpicor();\r\n  console.log('Saving updated form data:', formData);\r\n  \r\n  // Update the processed data with manual changes\r\n  processedData = formData;\r\n  \r\n  // Save the updated data back to the Flask server\r\n  saveUpdatedDataToServer(formData);\r\n  \r\n  try {\r\n    console.log('Starting tag update process...');\r\n    \r\n    // First, get current categories to see what's there\r\n    Office.context.mailbox.item.categories.getAsync((getResult) => {\r\n      console.log('Current categories:', getResult);\r\n      \r\n      if (getResult.status === Office.AsyncResultStatus.Succeeded) {\r\n        const currentCategories = getResult.value;\r\n        console.log('Current category names:', currentCategories.map(cat => cat.displayName));\r\n        \r\n        // Remove old tags\r\n        const tagsToRemove = currentCategories\r\n          .filter(cat => [\"Pending Approval\", \"Missing Info\", \"Approved\"].includes(cat.displayName))\r\n          .map(cat => cat.displayName);\r\n        \r\n        console.log('Tags to remove:', tagsToRemove);\r\n        \r\n        if (tagsToRemove.length > 0) {\r\n          Office.context.mailbox.item.categories.removeAsync(tagsToRemove, (removeResult) => {\r\n            console.log('Remove result:', removeResult);\r\n            \r\n            // Add green \"Approved\" tag\r\n            Office.context.mailbox.item.categories.addAsync([\"Approved\"], (addResult) => {\r\n              console.log('Add result:', addResult);\r\n              \r\n              if (addResult.status === Office.AsyncResultStatus.Succeeded) {\r\n                showSuccess('Order entered successfully! Email tagged as \"Approved\"');\r\n                // Create order acknowledgement draft\r\n                createOrderAcknowledgementDraft();\r\n      } else {\r\n                console.error('Add tag failed:', addResult.error);\r\n                showSuccess('Order entered successfully! (Tag update failed: ' + (addResult.error?.message || 'Unknown error') + ')');\r\n                // Still create the draft even if tagging failed\r\n                createOrderAcknowledgementDraft();\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          // No tags to remove, just add Approved\r\n          Office.context.mailbox.item.categories.addAsync([\"Approved\"], (addResult) => {\r\n            console.log('Add result (no removal):', addResult);\r\n            \r\n            if (addResult.status === Office.AsyncResultStatus.Succeeded) {\r\n              showSuccess('Order entered successfully! Email tagged as \"Approved\"');\r\n              // Create order acknowledgement draft\r\n              createOrderAcknowledgementDraft();\r\n      } else {\r\n              console.error('Add tag failed:', addResult.error);\r\n              showSuccess('Order entered successfully! (Tag update failed: ' + (addResult.error?.message || 'Unknown error') + ')');\r\n              // Still create the draft even if tagging failed\r\n              createOrderAcknowledgementDraft();\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        console.error('Failed to get current categories:', getResult.error);\r\n        showSuccess('Order entered successfully! (Could not read current tags)');\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error updating email tags:', error);\r\n    showSuccess('Order entered successfully! (Tag update failed: ' + error.message + ')');\r\n  }\r\n}\r\n\r\nfunction resetFormHandler() {\r\n  if (confirm('Are you sure you want to reset the form? All changes will be lost.')) {\r\n    displayResults(processedData, null, null).catch(console.error);\r\n  }\r\n}\r\n\r\nfunction validateForm(): boolean {\r\n  let isValid = true;\r\n  \r\n  // Validate header fields\r\n  const requiredHeaderFields = [\r\n    { id: 'custNum', name: 'Customer Number' },\r\n    { id: 'poNum', name: 'PO Number' },\r\n    { id: 'otsName', name: 'Company Name' },\r\n    { id: 'otsAddress1', name: 'Address Line 1' },\r\n    { id: 'otsCity', name: 'City' },\r\n    { id: 'otsState', name: 'State' },\r\n    { id: 'otsZip', name: 'ZIP Code' }\r\n  ];\r\n  \r\n  requiredHeaderFields.forEach(field => {\r\n    const element = document.getElementById(field.id) as HTMLInputElement | HTMLSelectElement;\r\n    if (element) {\r\n      const value = element.value.trim();\r\n      const hasValue = value && value !== '';\r\n      const hasMissing = value.toUpperCase().includes('MISSING');\r\n      \r\n      if (!hasValue || hasMissing) {\r\n        const errorMessage = hasMissing ? `${field.name} contains \"MISSING\" and needs to be filled` : `${field.name} is required`;\r\n        markFieldAsInvalid(element, errorMessage);\r\n        isValid = false;\r\n    } else {\r\n        markFieldAsValid(element);\r\n      }\r\n    }\r\n  });\r\n  \r\n  // Validate line items\r\n  const lineItems = document.querySelectorAll('.line-item-card');\r\n  lineItems.forEach((card, index) => {\r\n    if (!validateLineItem(index)) {\r\n      isValid = false;\r\n    }\r\n  });\r\n  \r\n  // Update save button state\r\n  const saveBtn = document.getElementById('saveFormBtn') as HTMLButtonElement;\r\n  if (saveBtn) {\r\n    saveBtn.disabled = !isValid;\r\n    \r\n    // Update button text to show validation status\r\n    if (!isValid) {\r\n      saveBtn.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i> Complete Required Fields';\r\n      saveBtn.className = 'btn btn-warning';\r\n      } else {\r\n      saveBtn.innerHTML = '<i class=\"fas fa-save\"></i> Save & Enter Order';\r\n      saveBtn.className = 'btn btn-primary';\r\n    }\r\n  }\r\n  \r\n  return isValid;\r\n}\r\n\r\nfunction validateField(event: Event) {\r\n  const field = event.target as HTMLInputElement;\r\n  const value = field.value.trim();\r\n  \r\n  if (field.required && !value) {\r\n    markFieldAsInvalid(field, 'This field is required');\r\n  } else if (value === 'MISSING' || value.includes('MISSING')) {\r\n    markFieldAsInvalid(field, 'This field contains \"MISSING\" and needs to be filled');\r\n      } else {\r\n    markFieldAsValid(field);\r\n  }\r\n}\r\n\r\nfunction validateLineItem(index: number): boolean {\r\n  let isValid = true;\r\n  \r\n  const requiredFields = [\r\n    { id: `partNum_${index}`, name: 'Part Number' },\r\n    { id: `sellingQuantity_${index}`, name: 'Quantity' },\r\n    { id: `docUnitPrice_${index}`, name: 'Unit Price' }\r\n  ];\r\n  \r\n  requiredFields.forEach(field => {\r\n    const element = document.getElementById(field.id) as HTMLInputElement;\r\n    if (element) {\r\n      const value = element.value.trim();\r\n      const hasValue = value && value !== '';\r\n      const hasMissing = value.toUpperCase().includes('MISSING');\r\n      \r\n      if (!hasValue || hasMissing) {\r\n        const errorMessage = hasMissing ? `${field.name} contains \"MISSING\" and needs to be filled` : `${field.name} is required`;\r\n        markFieldAsInvalid(element, errorMessage);\r\n        isValid = false;\r\n      } else {\r\n        markFieldAsValid(element);\r\n      }\r\n    }\r\n  });\r\n  \r\n  return isValid;\r\n}\r\n\r\nfunction markFieldAsInvalid(field: HTMLInputElement | HTMLSelectElement, message: string) {\r\n  field.classList.remove('is-valid');\r\n  field.classList.add('is-invalid');\r\n  \r\n  const errorId = field.id + '_error';\r\n  const errorElement = document.getElementById(errorId);\r\n  if (errorElement) {\r\n    errorElement.textContent = message;\r\n    errorElement.style.display = 'block';\r\n  }\r\n}\r\n\r\nfunction markFieldAsValid(field: HTMLInputElement | HTMLSelectElement) {\r\n  field.classList.remove('is-invalid');\r\n  field.classList.add('is-valid');\r\n  \r\n  const errorId = field.id + '_error';\r\n  const errorElement = document.getElementById(errorId);\r\n  if (errorElement) {\r\n    errorElement.style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction clearFieldError(event: Event) {\r\n  const field = event.target as HTMLInputElement;\r\n  field.classList.remove('is-invalid');\r\n  \r\n  const errorId = field.id + '_error';\r\n  const errorElement = document.getElementById(errorId);\r\n  if (errorElement) {\r\n    errorElement.style.display = 'none';\r\n  }\r\n}\r\n\r\nfunction clearLineItemError(index: number) {\r\n  const fields = [`partNum_${index}`, `sellingQuantity_${index}`, `docUnitPrice_${index}`];\r\n  fields.forEach(fieldId => {\r\n    const field = document.getElementById(fieldId) as HTMLInputElement;\r\n    if (field) {\r\n      field.classList.remove('is-invalid');\r\n      const errorElement = document.getElementById(fieldId + '_error');\r\n      if (errorElement) {\r\n        errorElement.style.display = 'none';\r\n      }\r\n        }\r\n      });\r\n    }\r\n    \r\nfunction removeLineItem(index: number) {\r\n  if (confirm('Are you sure you want to remove this line item?')) {\r\n    const card = document.querySelector(`[data-index=\"${index}\"]`);\r\n    if (card) {\r\n      card.remove();\r\n    }\r\n  }\r\n}\r\n\r\nfunction showSuccess(message: string) {\r\n  const alert = document.createElement('div');\r\n  alert.className = 'alert alert-success alert-dismissible fade show position-fixed';\r\n  alert.style.cssText = 'top: 10px; right: 10px; z-index: 9999; min-width: 300px;';\r\n  alert.innerHTML = `${message}<button type=\"button\" class=\"btn-close\" onclick=\"this.parentElement.remove()\"></button>`;\r\n  document.body.appendChild(alert);\r\n  \r\n  setTimeout(() => alert.remove(), 3000);\r\n}\r\n\r\n\r\n// Generate acknowledgement email body\r\nfunction generateAcknowledgementEmailBody(formData: any): string {\r\n  // Get customer name from the original email or use a default\r\n  const originalEmailFrom = Office.context.mailbox.item.from?.displayName || \r\n                           Office.context.mailbox.item.from?.emailAddress || \r\n                           'Customer';\r\n  \r\n  // Extract first name from display name\r\n  const firstName = originalEmailFrom.split(' ')[0] || 'Customer';\r\n  \r\n  // Calculate total and format parts\r\n  let totalAmount = 0;\r\n  const partsList = formData.lineItems.map((item: any) => {\r\n    const quantity = parseFloat(item.quantity) || 0;\r\n    const price = parseFloat(item.unit_price) || 0;\r\n    const lineTotal = quantity * price;\r\n    totalAmount += lineTotal;\r\n    \r\n    return `• ${item.internal_part_number}: ${item.quantity} @ $${parseFloat(item.unit_price).toFixed(2)} = $${lineTotal.toFixed(2)}`;\r\n  }).join('\\n');\r\n  \r\n  // Calculate delivery date (assuming 3 business days)\r\n  const deliveryDate = new Date();\r\n  deliveryDate.setDate(deliveryDate.getDate() + 3);\r\n  const deliveryDateStr = deliveryDate.toLocaleDateString('en-US', { \r\n    weekday: 'long', \r\n    year: 'numeric', \r\n    month: 'long', \r\n    day: 'numeric' \r\n  });\r\n  \r\n  // Create the acknowledgement email body\r\n  return `Hi ${firstName},\r\n\r\nPO${formData.poNum} processed successfully.\r\n\r\nAccount: ${formData.custNum}\r\nParts:\r\n${partsList}\r\n\r\nTotal: $${totalAmount.toFixed(2)}\r\nDelivery: ${deliveryDateStr}\r\n\r\nThanks,\r\nWilliam`;\r\n}\r\n\r\n// Create order acknowledgement draft\r\nasync function createOrderAcknowledgementDraft() {\r\n  try {\r\n    // Get form data\r\n    const formData = await convertToFormFormat(processedData);\r\n    \r\n    // Generate the email body\r\n    const emailBody = generateAcknowledgementEmailBody(formData);\r\n\r\n    // Create a new email draft (we can't modify existing emails in Outlook add-ins)\r\n    Office.context.mailbox.displayNewMessageForm({\r\n      toRecipients: [Office.context.mailbox.item.from?.emailAddress || ''],\r\n      subject: `Order Acknowledgement - PO${formData.poNum}`,\r\n      body: emailBody,\r\n      attachments: []\r\n    });\r\n    \r\n    // Show success message\r\n    showSuccess('Order acknowledgement draft opened! Review and send when ready.');\r\n    \r\n  } catch (error) {\r\n    console.error('Error creating order acknowledgement draft:', error);\r\n    showError('Failed to create order acknowledgement draft: ' + error.message);\r\n  }\r\n}\r\n\r\n// Send the acknowledgement email\r\nfunction sendAcknowledgementEmail() {\r\n  try {\r\n    // Re-create the acknowledgement email draft\r\n    createOrderAcknowledgementDraft();\r\n    \r\n    showSuccess('Acknowledgement draft opened! Review and send when ready.');\r\n    \r\n  } catch (error) {\r\n    console.error('Error opening acknowledgement email:', error);\r\n    showError('Failed to open acknowledgement email: ' + error.message);\r\n  }\r\n}\r\n\r\n\r\n\r\n// Sample data for testing\r\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Outlook","window","createOrderAcknowledgementDraft","sendAcknowledgementEmail","_initializeApp","initializeApp","processedData","currentFileId","loadSampleData","console","log","sampleData","company_info","account_number","customer_po_number","po_date","company_name","billing_company_name","shipping_address","shipping_method","shipping_account_number","line_items","internal_part_number","description","quantity","unit_price","external_part_number","mapping_status","mapping_confidence","displayResults","catch","error","showFallbackForm","_Office$context$mailb","_Office$context$mailb2","subject","context","mailbox","item","from","emailAddress","fallbackData","Date","toISOString","email_context","_callee","_t","_context","initializeBackgroundProcessing","addHandlerAsync","EventType","ItemChanged","onItemChanged","loadEmailData","checkForProcessedEmail","checkForPurchaseOrderAttachments","showError","message","_onItemChanged","_callee2","_t2","_context2","_checkForProcessedEmail","_callee3","_context3","categories","getAsync","result","status","AsyncResultStatus","Succeeded","hasPendingApproval","some","cat","hasMissingInfo","hasApproved","loadReviewUI","_x","_loadReviewUI","_callee4","emailId","attachments","attachmentName","pdfAttachment","uploadSection","response","_uploadSection","_t3","_t4","_context4","conversationId","find","att","name","toLowerCase","endsWith","loadApprovedEmailData","document","querySelector","innerHTML","concat","setTimeout","loadSampleBtn","getElementById","skipBtn","addEventListener","fetch","encodeURIComponent","method","headers","ok","Error","json","success","data","file_id","reviewReport","validation","_x2","_loadApprovedEmailData","_callee5","_t5","_t6","_context5","displayApprovedResults","_x3","_x4","_x5","_displayApprovedResults","_callee6","formData","enteredTimestamp","stateField","_context6","convertToFormFormat","toLocaleString","custNum","customerName","poNum","orderDate","shipViaCode","payFlag","shippingMethod","shippingAccountNumber","useOTS","otsName","otsAddress1","otsCity","otsZip","generateReadOnlyLineItemsHtml","lineItems","otsState","map","index","parseFloat","toFixed","join","_x6","_x7","_x8","_displayResults","_callee7","_context7","generateLineItemsHtml","initializeFormEventListeners","validateForm","_saveUpdatedDataToServer","_callee8","updatedData","_t7","_context8","itemId","body","JSON","stringify","email_id","attachment_name","updated_data","lookupCustomerName","_x0","_lookupCustomerName","_callee9","accountNumber","_t8","_context9","customer","_x1","_convertToFormFormat","_callee0","_data$company_info","_data$company_info2","_data$company_info3","_data$company_info4","_data$company_info5","_data$company_info6","_data$company_info7","_data$company_info8","orderHed","orderDtl","_t9","_t0","_t1","_t10","_t11","_t12","_t13","_t14","_t15","_context0","ds","OrderHed","OrderDtl","CustNum","PONum","OrderDate","slice","ShipViaCode","PayFlag","ShippingMethod","ShippingAccountNumber","UseOTS","OTSName","OTSAddress1","OTSCity","OTSState","OTSZip","PartNum","LineDesc","SellingQuantity","DocUnitPrice","_loadEmailData","_callee1","_context1","_checkForPurchaseOrderAttachments","_callee10","_context10","addLineItemBtn","addLineItemHandler","saveFormBtn","saveFormHandler","resetFormBtn","resetFormHandler","querySelectorAll","forEach","field","validateField","event","target","classList","remove","errorId","id","errorElement","style","display","clearFieldError","container","newIndex","children","lineItemHtml","insertAdjacentHTML","newCard","lastElementChild","input","validateLineItem","fieldId","clearLineItemError","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","_document$getElementB9","_document$getElementB0","_document$getElementB1","_document$getElementB10","_document$getElementB11","checked","card","_document$getElementB12","_document$getElementB13","_document$getElementB14","_document$getElementB15","partNum","unitPrice","push","_x9","saveUpdatedDataToServer","getResult","currentCategories","tagsToRemove","filter","includes","removeAsync","removeResult","addAsync","addResult","_addResult$error","showSuccess","_addResult$error2","confirm","isValid","element","trim","hasValue","hasMissing","toUpperCase","markFieldAsInvalid","markFieldAsValid","saveBtn","disabled","className","required","add","textContent","alert","createElement","cssText","appendChild","generateAcknowledgementEmailBody","_Office$context$mailb3","_Office$context$mailb4","firstName","split","totalAmount","partsList","lineTotal","deliveryDate","setDate","getDate","deliveryDateStr","toLocaleDateString","weekday","year","month","day","_createOrderAcknowledgementDraft","_callee11","_Office$context$mailb5","emailBody","_t16","_context11","displayNewMessageForm","toRecipients","Set"],"sourceRoot":""}